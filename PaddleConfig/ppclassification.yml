#  Repositories : https://github.com/PaddlePaddle/PaddleClas
#     Task type : Common Object Classification
# Preprocessing : object_classification_dir2cls.py
#   Base config : ppcls/configs/PULC/person_attribute/PPLCNet_x1_0.yaml
#   Information : https://github.com/PaddlePaddle/PaddleDetection/blob/release/2.7/deploy/pipeline/docs/tutorials/pphuman_attribute.md
#                 https://github.com/PaddlePaddle/PaddleDetection/blob/release/2.7/docs/advanced_tutorials/customization/pphuman_attribute.md

### Before training
#   1. replace ${task_name} and ${config_name}
#   2. set _dataset_root
#   3. set _num_classes
#   4. set _batch_size
#   5. set _learning_rate

### Start training
#   python3 -m paddle.distributed.launch tools/train.py -c data/${task_name}/${config_name}.yml

### Export inference model
#   python3 tools/export_model.py -c data/${task_name}/${config_name}.yml -o Global.pretrained_model=workspace/${task_name}/${config_name}/best_model

########################################################################################
## dataset root
_dataset_root: &_dataset_root data/${task_name}/src
_label_path_train: &_label_path_train data/${task_name}/src/train.txt
_label_path_test: &_label_path_test data/${task_name}/src/test.txt

## number of classes
_num_classes: &_num_classes 2

## train batch size
_batch_size: &batch_size 64

## base learning rate
# new_lr = (default_base_lr * batch_size * num_gpus) / (default_batch_size * default_num_gpus)
# new_lr = (0.01 * batch_size * num_gpus) / (64 * default_num_gpus) ==> unknown default_num_gpus
_learning_rate: &_learning_rate 0.01

#### >>>>> global <<<<< ######################################
Global:
  checkpoints: null
  pretrained_model: null
  output_dir: "./workspace/${task_name}"
  device: "gpu"
  save_interval: 1
  eval_during_train: True
  eval_interval: 1
  epochs: 20
  print_batch_step: 10
  use_visualdl: False
  # used for static mode and model export
  image_shape: [3, 256, 192]
  save_inference_dir: "./workspace/${task_name}"
  use_multilabel: True

#### >>>>> model architecture <<<<< ######################################
Arch:
  name: "PPLCNet_x1_0"
  pretrained: True
  use_ssld: True
  class_num: *_num_classes

#### >>>>> optimizer <<<<< ######################################
Loss:
  Train:
    - MultiLabelLoss:
        weight: 1.0
        weight_ratio: True
        size_sum: True
  Eval:
    - MultiLabelLoss:
        weight: 1.0
        weight_ratio: True
        size_sum: True
Optimizer:
  name: Momentum
  momentum: 0.9
  lr:
    name: Cosine
    learning_rate: *_learning_rate
    warmup_epoch: 5
  regularizer:
    name: 'L2'
    coeff: 0.0005

#### >>>>> data loader <<<<< ######################################
DataLoader:
  Train:
    dataset:
      name: MultiLabelDataset
      image_root: *_dataset_root
      cls_label_path: *_label_path_train
      label_ratio: True
      transform_ops:
        - DecodeImage:
            to_rgb: True
            channel_first: False
        - ResizeImage:
            size: [192, 256]
        - TimmAutoAugment:
            prob: 0.8
            config_str: rand-m9-mstd0.5-inc1
            interpolation: bicubic
            img_size: [192, 256]
        - Padv2:
            size: [212, 276]
            pad_mode: 1
            fill_value: 0
        - RandomCropImage:
            size: [192, 256]
        - RandFlipImage:
            flip_code: 1
        - NormalizeImage:
            scale: 1.0/255.0
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
            order: ''
        - RandomErasing:
            EPSILON: 0.4
            sl: 0.02
            sh: 1.0/3.0
            r1: 0.3
            attempt: 10
            use_log_aspect: True
            mode: pixel
    sampler:
      name: DistributedBatchSampler
      batch_size: *_batch_size
      drop_last: True
      shuffle: True
    loader:
      num_workers: 8
      use_shared_memory: True
  Eval:
    dataset:
      name: MultiLabelDataset
      image_root: *_dataset_root
      cls_label_path: *_label_path_test
      label_ratio: True
      transform_ops:
        - DecodeImage:
            to_rgb: True
            channel_first: False
        - ResizeImage:
            size: [192, 256]
        - NormalizeImage:
            scale: 1.0/255.0
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
            order: ''
    sampler:
      name: DistributedBatchSampler
      batch_size: *_batch_size
      drop_last: False
      shuffle: False
    loader:
      num_workers: 8
      use_shared_memory: True

#### >>>>> other <<<<< ######################################
Infer:
  infer_imgs: deploy/images/PULC/person_attribute/090004.jpg
  batch_size: 10
  transforms:
    - DecodeImage:
        to_rgb: True
        channel_first: False
    - ResizeImage:
        size: [192, 256]
    - NormalizeImage:
        scale: 1.0/255.0
        mean: [0.485, 0.456, 0.406]
        std: [0.229, 0.224, 0.225]
        order: ''
    - ToCHWImage:
  PostProcess:
    name: PersonAttribute
    threshold: 0.5  #default threshold
    glasses_threshold: 0.3  #threshold only for glasses
    hold_threshold: 0.6 #threshold only for hold

Metric:
  Eval:
    - ATTRMetric:
